{"version":3,"sources":["utils/useDebounce.js","utils/fetch.js","utils/useFetch.js","utils/useLocalStorage.js","components/Results.js","components/Saved.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","URL","process","fetch","query","a","axios","get","useFetch","immediate","status","setStatus","movies","setMovies","execute","useCallback","then","response","data","Search","catch","error","useLocalstorage","key","initialState","JSON","parse","window","localStorage","getItem","setItem","stringify","storedValue","setStoredValue","setValue","Results","props","nominateHandler","nominated","className","map","info","Title","Year","rel","href","imdbID","disabled","onClick","e","Saved","count","deleteHandler","Object","entries","movie","changeHandler","full","role","action","method","htmlFor","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","fill","cx","cy","r","type","id","placeholder","onChange","maxLength","console","log","App","setData","results","setResults","debouncedQuery","preventDefault","target","temp","title","hasOwnProperty","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAkBeA,MAhBf,SAAqBC,EAAOC,GAAQ,IAAD,EACWC,mBAASF,GADpB,mBAC1BG,EAD0B,KACVC,EADU,KAajC,OAVAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAkBJ,KACjBC,GAEH,OAAO,WACLO,aAAaF,MAEd,CAACN,EAAOC,IAEJE,G,iDCdHM,EAAG,0CAAsCC,WAAtC,kBAMMC,EAJJ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACCC,IAAMC,IAAN,UAAaN,GAAb,OAAmBG,IADpB,mFAAH,sDC0BII,EA1BE,SAACJ,GAA6B,IAAtBK,IAAqB,2DAChBf,mBAAS,QADO,mBACrCgB,EADqC,KAC7BC,EAD6B,OAEhBjB,mBAAS,IAFO,mBAErCkB,EAFqC,KAE7BC,EAF6B,KAItCC,EAAUC,uBAAY,WAG1B,OAFAJ,EAAU,WAEHR,EAAMC,GACVY,MAAK,SAACC,GACLJ,EAAU,YAAII,EAASC,KAAKC,SAC5BR,EAAU,cAEXS,OAAM,SAACC,GACNV,EAAU,cAEb,CAACP,IAQJ,OANAP,qBAAU,WACJY,GACFK,MAED,CAACA,EAASL,IAEN,CAAEK,UAASJ,SAAQE,WCNbU,EAlBgB,SAACC,GAA4B,IAAvBC,EAAsB,uDAAP,GAAO,EACnB9B,oBAAS,WAC7C,OAAI+B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,IAClCE,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,KAE9CI,OAAOC,aAAaE,QAAQP,EAAKE,KAAKM,UAAUP,IACzCA,MAN8C,mBAClDQ,EADkD,KACrCC,EADqC,KAUnDC,EAAW,SAAC1C,GAChByC,EAAezC,GACfmC,OAAOC,aAAaE,QAAQP,EAAKE,KAAKM,UAAUvC,KAGlD,MAAO,CAACwC,EAAaE,ICiBRC,EAlCC,SAACC,GAAW,IAClBxB,EAAuCwB,EAAvCxB,OAAQyB,EAA+BD,EAA/BC,gBAAiBC,EAAcF,EAAdE,UAEjC,OACE,mCACE,0BAASC,UAAU,yBAAnB,UACE,yCACA,oBAAIA,UAAU,gCAAd,SACG3B,EAAO4B,KAAI,SAACC,GAAD,OACV,qBAEEF,UAAU,kGAFZ,UAIE,oBAAIA,UAAU,UAAd,SAAyBE,EAAKC,QAC9B,8CAAiBD,EAAKE,QACtB,4BACE,mBAAGC,IAAI,WAAWC,KAAMJ,EAAKK,OAAQP,UAAU,YAA/C,oBAIF,wBACEQ,WAAYT,EAAUG,EAAKK,QAC3BE,QAAS,SAACC,GAAD,OAAOZ,EAAgBY,EAAGR,IAFrC,wBAVKA,EAAKK,mBCgCTI,EA1CD,SAACd,GAAW,IAChBe,EAAoCf,EAApCe,MAAOb,EAA6BF,EAA7BE,UAAWc,EAAkBhB,EAAlBgB,cAE1B,OACE,mCACE,0BAASb,UAAU,2CAAnB,UACE,iDACA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,yCAAf,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAMA,UAAU,oDAAhB,UACIY,GAAS,GAAK,WAItB,gCACE,qBACEZ,UAAS,8HACG,IAAVY,EAAc,QAAU,SADjB,gBAEDA,EAAQ,EAAR,YAAiBA,EAAjB,MAA6B,YAEvC,qBAAKZ,UAAU,mFAGnB,oBAAIA,UAAU,OAAd,SACGc,OAAOC,QAAQhB,GAAWE,KAAI,SAACe,GAAD,OAC7B,qBAEEhB,UAAU,kGAFZ,UAIE,6BAAKgB,EAAM,KACX,wBAAQP,QAAS,SAACC,GAAD,OAAOG,EAAcH,IAAIzD,MAAO+D,EAAM,GAAvD,sBAJKA,EAAM,eC2BVpC,EAtDA,SAACiB,GAAW,IACjBhC,EAAuCgC,EAAvChC,MAAOoD,EAAgCpB,EAAhCoB,cAAeC,EAAiBrB,EAAjBqB,KAAM/C,EAAW0B,EAAX1B,OAEpC,OACE,qCACE,oBAAI6B,UAAU,6BAAd,mDAEA,yBAASmB,KAAK,SAAd,SACE,sBAAMC,OAAO,IAAIC,OAAO,MAAxB,SACE,0BAAUrB,UAAU,sBAApB,SACE,wBAAOsB,QAAQ,SAAStB,UAAU,4BAAlC,UACE,qBACEA,UAAS,kEACPnC,GAAoB,YAAXM,EAAuB,WAAa,cAE/CoD,OAAO,QACPC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,QAAQ,cACRC,KAAK,OATP,SAWE,wBAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,SAG5B,uBACE/B,UAAU,qBACVgC,KAAK,SACLC,GAAG,SACHhF,MAAOY,EACPqE,YAAY,iBACZC,SAAUlB,EACVmB,UAAU,iBAOpB,qBACEpC,UAAS,gHACNkB,GAAQ,kBAEXC,KAAK,QAJP,SAME,iCACE,mEADF,uECpCRkB,QAAQC,IAAR,uJAEE,iBA4FaC,MAzFf,WAAgB,IAAD,EACWxD,EAAgB,OAAQ,CAC9CgB,UAAW,GACXa,MAAO,EACPM,MAAM,EACNrD,MAAO,KALI,mBACNc,EADM,KACA6D,EADA,OAOiBrF,mBAAS,IAP1B,mBAONsF,EAPM,KAOGC,EAPH,KAUPC,EAAiB3F,EAAY2B,EAAKd,MAAO,KAVlC,EAacI,EAAS0E,GAA5BxE,EAbK,EAaLA,OAAQE,EAbH,EAaGA,OAmDhB,OAjDAf,qBAAU,WACRoF,EAAWrE,KACV,CAACA,IAgDF,sBAAK2B,UAAU,qCAAf,UACE,cAAC,EAAD,CACEiB,cAhDgB,SAACP,GACrBA,EAAEkC,iBADyB,IAGnB3F,EAAUyD,EAAEmC,OAAZ5F,MACRuF,EAAQ,2BACH7D,GADE,IAELd,MAAOZ,MA2CLY,MAAOc,EAAKd,MACZM,OAAQA,EACR+C,KAAMvC,EAAKuC,OAGb,sBAAKlB,UAAU,mBAAf,UACE,cAAC,EAAD,CACED,UAAWpB,EAAKoB,UAChBc,cA1Bc,SAACH,GACrBA,EAAEkC,iBADyB,IAGnB3F,EAAUyD,EAAEmC,OAAZ5F,MACF6F,EAAI,eAAQnE,EAAKoB,kBAChB+C,EAAK7F,GACZuF,EAAQ,2BACH7D,GADE,IAELoB,UAAW+C,EACXlC,MAAQjC,EAAKiC,OAAS,EACtBM,MAAM,MAiBFN,MAAOjC,EAAKiC,QAEd,cAAC,EAAD,CACEvC,OAAQoE,EACR3C,gBApDgB,SAACY,EAAGR,GAC1BQ,EAAEkC,iBADiC,IAEpBG,EAAsB7C,EAA7BC,MAAsB8B,EAAO/B,EAAfK,QAEjB5B,EAAKoB,UAAUiD,eAAef,IAAOtD,EAAKiC,MAAQ,EACrD4B,EAAQ,2BACH7D,GADE,IAELiC,MAAQjC,EAAKiC,OAAS,EACtBb,UAAU,2BACLpB,EAAKoB,WADD,kBAENkC,EAAKc,OAGc,IAAfpE,EAAKiC,OACd4B,EAAQ,2BACH7D,GADE,IAELuC,MAAM,MAqCJnB,UAAWpB,EAAKoB,mBCpFXkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.101b9608.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import axios from \"axios\";\nconst URL = `https://www.omdbapi.com/?apikey=${process.env.REACT_APP_API_KEY}&type=movie&s=`;\n\nconst fetch = async (query) => {\n  return await axios.get(`${URL}${query}`);\n};\n\nexport default fetch;\n","import { useState, useCallback, useEffect } from \"react\";\nimport fetch from \"./fetch\";\n\nconst useFetch = (query, immediate = true) => {\n  const [status, setStatus] = useState(\"idle\");\n  const [movies, setMovies] = useState([]);\n\n  const execute = useCallback(() => {\n    setStatus(\"pending\");\n\n    return fetch(query)\n      .then((response) => {\n        setMovies([...response.data.Search]);\n        setStatus(\"success\");\n      })\n      .catch((error) => {\n        setStatus(\"error\");\n      });\n  }, [query]);\n\n  useEffect(() => {\n    if (immediate) {\n      execute();\n    }\n  }, [execute, immediate]);\n\n  return { execute, status, movies };\n};\n\nexport default useFetch;\n","import { useState } from \"react\";\n\nexport const useLocalstorage = (key, initialState = \"\") => {\n  const [storedValue, setStoredValue] = useState(() => {\n    if (JSON.parse(window.localStorage.getItem(key))) {\n      return JSON.parse(window.localStorage.getItem(key));\n    } else {\n      window.localStorage.setItem(key, JSON.stringify(initialState));\n      return initialState;\n    }\n  });\n\n  const setValue = (value) => {\n    setStoredValue(value);\n    window.localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalstorage;\n","const Results = (props) => {\n  const { movies, nominateHandler, nominated } = props;\n\n  return (\n    <>\n      <section className=\"text-center row-span-5\">\n        <h1>Results</h1>\n        <ul className=\"flex flex-wrap justify-center\">\n          {movies.map((info) => (\n            <li\n              key={info.imdbID}\n              className=\"flex flex-col items-center justify-between rounded-t-lg shadow-lg rounded-lg text-sm w-1/5\tm-4\"\n            >\n              <h3 className=\"p-2 m-2\">{info.Title}</h3>\n              <h6>Released in {info.Year}</h6>\n              <p>\n                <a rel=\"external\" href={info.imdbID} className=\"underline\">\n                  IMDB\n                </a>\n              </p>\n              <button\n                disabled={!!nominated[info.imdbID]}\n                onClick={(e) => nominateHandler(e, info)}\n              >\n                Nominate\n              </button>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Results;\n","const Saved = (props) => {\n  const { count, nominated, deleteHandler } = props;\n\n  return (\n    <>\n      <section className=\"text-center flex flex-col p-5 row-span-1\">\n        <h1>Nomination List</h1>\n        <div className=\"relative pt-1\">\n          <div className=\"flex mb-2 items-center justify-between\">\n            <div className=\"text-right\">\n              <span className=\"text-s font-semibold inline-block text-yellow-600\">\n                {(count || 0) + \"/5\"}\n              </span>\n            </div>\n          </div>\n          <div>\n            <div\n              className={`absolute z-10 transition-background-color duration-500 ease-in ease-out overflow-hidden h-2 text-xs flex rounded bg-${\n                count === 5 ? \"green\" : \"yellow\"\n              }-200 ${count < 5 ? `w-${count}/5` : \"w-full\"}`}\n            ></div>\n            <div className=\"absolute overflow-hidden h-2 mb-4 text-xs flex rounded bg-red-200 w-full\"></div>\n          </div>\n        </div>\n        <ul className=\"flex\">\n          {Object.entries(nominated).map((movie) => (\n            <li\n              key={movie[0]}\n              className=\"flex flex-col items-center justify-between rounded-t-lg shadow-lg rounded-lg text-sm w-1/5\tm-4\"\n            >\n              <h3>{movie[1]}</h3>\n              <button onClick={(e) => deleteHandler(e)} value={movie[0]}>\n                Remove\n              </button>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </>\n  );\n};\n\nexport default Saved;\n","const Search = (props) => {\n  const { query, changeHandler, full, status } = props;\n\n  return (\n    <>\n      <h1 className=\"text-4xl p-5 m-5 font-sans\">The Shoppies 🎥🍿</h1>\n\n      <section role=\"search\">\n        <form action=\"#\" method=\"get\">\n          <fieldset className=\"shadow p-2 m-2 flex\">\n            <label htmlFor=\"search\" className=\"flex justify-start w-full\">\n              <svg\n                className={`animate-spin inline-flex items-center h-5 w-5 mt-3 mr-5 ${\n                  query && status !== \"success\" ? \" visible\" : \" invisible\"\n                }`}\n                stroke=\"black\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                viewBox=\"0 0 100 100\"\n                fill=\"none\"\n              >\n                <circle cx=\"50\" cy=\"50\" r=\"48\" />\n              </svg>\n\n              <input\n                className=\"w-full rounded p-2\"\n                type=\"search\"\n                id=\"search\"\n                value={query}\n                placeholder=\"Try 'Avengers'\"\n                onChange={changeHandler}\n                maxLength=\"200\"\n              />\n            </label>\n          </fieldset>\n        </form>\n      </section>\n\n      <div\n        className={`block text-sm text-red-600 bg-red-300 h-0 flex items-center p-4 rounded-md shadow-float inline-block ${\n          !full && \"invisible h-12\"\n        }`}\n        role=\"alert\"\n      >\n        <span>\n          <strong>You've reached 5 nominations!</strong> Please remove a movie\n          if you'd like to add a different one\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default Search;\n","import { useEffect, useState } from \"react\";\nimport useDebounce from \"./utils/useDebounce\";\nimport useFetch from \"./utils/useFetch\";\nimport useLocalstorage from \"./utils/useLocalStorage\";\n\nimport Results from \"./components/Results\";\nimport Saved from \"./components/Saved\";\nimport Search from \"./components/Search\";\n\nconsole.log(\n  `%c 💛 💚 💙 💜 🧡 Hi Shopify team 🧡 💜 💙 💚 💛`,\n  \"color: blue; \"\n);\n\nfunction App() {\n  const [data, setData] = useLocalstorage(\"data\", {\n    nominated: {},\n    count: 0,\n    full: false,\n    query: \"\",\n  });\n  const [results, setResults] = useState([]);\n\n  // Debounce the search term so we're not constantly calling\n  const debouncedQuery = useDebounce(data.query, 500);\n\n  // Run through our Fetch hook to get results & deconstruct return vals\n  const { status, movies } = useFetch(debouncedQuery);\n\n  useEffect(() => {\n    setResults(movies);\n  }, [movies]);\n\n  const changeHandler = (e) => {\n    e.preventDefault();\n\n    const { value } = e.target;\n    setData({\n      ...data,\n      query: value,\n    });\n  };\n\n  const nominateHandler = (e, info) => {\n    e.preventDefault();\n    const { Title: title, imdbID: id } = info;\n\n    if (!data.nominated.hasOwnProperty(id) && data.count < 5) {\n      setData({\n        ...data,\n        count: (data.count += 1),\n        nominated: {\n          ...data.nominated,\n          [id]: title,\n        },\n      });\n    } else if (data.count === 5) {\n      setData({\n        ...data,\n        full: true,\n      });\n    }\n  };\n\n  const deleteHandler = (e) => {\n    e.preventDefault();\n\n    const { value } = e.target;\n    const temp = { ...data.nominated };\n    delete temp[value];\n    setData({\n      ...data,\n      nominated: temp,\n      count: (data.count -= 1),\n      full: false,\n    });\n  };\n\n  return (\n    <div className=\"container text-center mx-auto px-4\">\n      <Search\n        changeHandler={changeHandler}\n        query={data.query}\n        status={status}\n        full={data.full}\n      />\n\n      <div className=\"grid grid-rows-6\">\n        <Saved\n          nominated={data.nominated}\n          deleteHandler={deleteHandler}\n          count={data.count}\n        />\n        <Results\n          movies={results}\n          nominateHandler={nominateHandler}\n          nominated={data.nominated}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}